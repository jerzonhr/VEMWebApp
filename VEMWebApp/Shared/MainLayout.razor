@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="column-layout master-view-container">
    <div class="row-layout group">
        <div @onclick="@(e => _navDrawer!.ToggleAsync())" class="row-layout group_1">
            <span class="material-icons icon">
                menu
            </span>
        </div>
        <IgbNavbar class="navbar" master_view-scope>
            <div class="row-layout group_2">
                <h6 class="h6">
                    VEM Web App
                </h6>
            </div>
        </IgbNavbar>
    </div>
    <div class="row-layout group_3">
        <div class="column-layout group_4">
            <IgbNavDrawer Open="true" Position="NavDrawerPosition.Relative" @ref="_navDrawer" class="nav-drawer" master_view-scope>
                <IgbNavDrawerHeaderItem>
                    <div>Genset</div>
                </IgbNavDrawerHeaderItem>
                <IgbNavDrawerItem @onclick="@(() => NavigationManager.NavigateTo("/genset"))">
                    <span slot="icon">
                        <span class="material-icons icon_1">
                            local_gas_station
                        </span>
                        <IgbRipple></IgbRipple>
                    </span>
                    <div slot="content">Fueling</div>
                </IgbNavDrawerItem>
                <IgbNavDrawerItem>
                    <span slot="icon">
                        <span class="material-icons icon_1">
                            precision_manufacturing
                        </span>
                        <IgbRipple></IgbRipple>
                    </span>
                    <div slot="content">Mount/Unmount</div>
                </IgbNavDrawerItem>
                <IgbNavDrawerHeaderItem>
                    <div>Work Orders</div>
                </IgbNavDrawerHeaderItem>
                <IgbNavDrawerItem @onclick="@(() => NavigationManager.NavigateTo("/work_orders"))">
                    <span slot="icon">
                        <span class="material-icons icon_1">
                            view_list
                        </span>
                        <IgbRipple></IgbRipple>
                    </span>
                    <div slot="content">Item template</div>
                </IgbNavDrawerItem>
            </IgbNavDrawer>
        </div>
        <div class="view-container">
            @Body
        </div>
    </div>
</div>

@code {
    private IgbNavDrawer _navDrawer;

    private DotNetObjectReference<MainLayout> _dotNetRef;
    private IJSObjectReference _jsModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _dotNetRef = DotNetObjectReference.Create(this);
            _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/resizeHandler.js");
            await _jsModule.InvokeVoidAsync("registerResizeHandler", _dotNetRef);
        }
    }

    [JSInvokable]
    public async Task OnResize(int width)
    {
        await _navDrawer.EnsureReady();
        if (_navDrawer != null)
        {
            if (width <= 1000)
            {
                await _navDrawer.HideAsync();
            }
            else
            {
                await _navDrawer.ShowAsync();
            }
        }
    }

    public void Dispose()
    {
        _dotNetRef?.Dispose();
    }
}
